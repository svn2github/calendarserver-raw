=== modified file 'twisted/web2/static.py'
--- twisted/web2/static.py	2009-04-20 17:38:06 +0000
+++ twisted/web2/static.py	2009-07-15 23:30:18 +0000
@@ -16,7 +16,7 @@
 
 # Twisted Imports
 from twisted.python import filepath
-from twisted.internet.defer import maybeDeferred
+from twisted.internet.defer import maybeDeferred, succeed
 from zope.interface import implements
 
 class MetaDataMixin(object):
@@ -291,12 +291,13 @@
         self.ignoredExts.append(ext)
 
     def directoryListing(self):
-        return dirlist.DirectoryLister(self.fp.path,
-                                       self.listChildren(),
-                                       self.contentTypes,
-                                       self.contentEncodings,
-                                       self.defaultType)
-
+        return self.listChildren().addCallback(lambda children: dirlist.DirectoryLister(
+                self.fp.path,
+                children,
+                self.contentTypes,
+                self.contentEncodings,
+                self.defaultType))
+                                        
     def putChild(self, name, child):
         """
         Register a child with the given name with this resource.
@@ -329,7 +330,7 @@
         children = self.putChildren.keys()
         if self.fp.isdir():
             children += [c for c in self.fp.listdir() if c not in children]
-        return children
+        return succeed(children)
 
     def locateChild(self, req, segments):
         """
@@ -387,17 +388,17 @@
                 ifp = self.fp.childSearchPreauth(*self.indexNames)
                 if ifp:
                     # Render from the index file
-                    standin = self.createSimilarFile(ifp.path)
+                    standin = self.createSimilarFile(ifp.path).render(req)
                 else:
                     # Render from a DirectoryLister
-                    standin = dirlist.DirectoryLister(
-                        self.fp.path,
-                        self.listChildren(),
-                        self.contentTypes,
-                        self.contentEncodings,
-                        self.defaultType
-                    )
-                return standin.render(req)
+                    return self.listChildren().addCallback(
+                         lambda children: dirlist.DirectoryLister(
+                          self.fp.path,
+                          self.listChildren(),
+                          self.contentTypes,
+                          self.contentEncodings,
+                          self.defaultType
+                         ).render(req))
 
         try:
             f = self.fp.open()

