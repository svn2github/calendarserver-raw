# -*- test-case-name: txcaldav.calendarstore.test.test_file -*-
##
# Copyright (c) 2010 Apple Inc. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
##
"""
Tests for common calendar store API functions.
"""

from txcaldav.icalendarstore import ICalendarStore, ICalendarStoreTransaction, \
    ICalendarObject, ICalendarHome, ICalendar
from twext.python.filepath import CachingFilePath as FilePath
from zope.interface.verify import verifyObject
from zope.interface.exceptions import BrokenMethodImplementation


storePath = FilePath(__file__).parent().child("calendar_store")

homeRoot = storePath.child("ho").child("me").child("home1")

cal1Root = homeRoot.child("calendar_1")



class CommonTests(object):
    """
    Tests for common functionality of interfaces defined in
    L{txcaldav.icalendarstore}.
    """

    requirements = {
        "home1": {
            "calendar_1": {
                "1.ics": cal1Root.child("1.ics").getContent(),
                "2.ics": cal1Root.child("2.ics").getContent(),
                "3.ics": cal1Root.child("3.ics").getContent()
            },
            "calendar_empty": {},
            "not_a_calendar": None
        },
        "not_a_home": None
    }

    def storeUnderTest(self):
        """
        Subclasses must override this to return an L{ICalendarStore} provider
        which adheres to the structure detailed by L{CommonTests.requirements}.
        This attribute is a dict of dict of dicts; the outermost layer
        representing UIDs mapping to calendar homes, then calendar names mapping
        to calendar collections, and finally calendar object names mapping to
        calendar object text.
        """
        raise NotImplementedError()


    def homeUnderTest(self):
        """
        Get the calendar home detailed by C{requirements['home1']}.
        """
        return self.storeUnderTest().newTransaction().calendarHomeWithUID(
            "home1")


    def calendarUnderTest(self):
        """
        Get the calendar detailed by C{requirements['home1']['calendar_1']}.
        """
        return self.homeUnderTest().calendarWithName("calendar_1")


    def calendarObjectUnderTest(self):
        """
        Get the calendar detailed by
        C{requirements['home1']['calendar_1']['1.ics']}.
        """
        return self.calendarUnderTest().calendarObjectWithName("1.ics")


    def assertProvides(self, interface, provider):
        """
        Verify that C{provider} properly provides C{interface}

        @type interface: L{zope.interface.Interface}
        @type provider: C{provider}
        """
        try:
            verifyObject(interface, provider)
        except BrokenMethodImplementation, e:
            self.fail(e)


    def test_calendarStoreProvides(self):
        """
        The calendar store provides L{ICalendarStore} and its required
        attributes.
        """
        calendarStore = self.storeUnderTest()
        self.assertProvides(ICalendarStore, calendarStore)


    def test_transactionProvides(self):
        """
        The transactions generated by the calendar store provide
        L{ICalendarStoreTransaction} and its required attributes.
        """
        self.assertProvides(ICalendarStoreTransaction,
                            self.storeUnderTest().newTransaction())


    def test_homeProvides(self):
        """
        The calendar homes generated by the calendar store provide
        L{ICalendarHome} and its required attributes.
        """
        self.assertProvides(ICalendarHome, self.homeUnderTest())


    def test_calendarProvides(self):
        """
        The calendars generated by the calendar store provide L{ICalendar} and
        its required attributes.
        """
        self.assertProvides(ICalendar, self.calendarUnderTest())


    def test_calendarObjectProvides(self):
        """
        The calendar objects generated by the calendar store provide
        L{ICalendarObject} and its required attributes.
        """
        self.assertProvides(ICalendarObject, self.calendarObjectUnderTest())
