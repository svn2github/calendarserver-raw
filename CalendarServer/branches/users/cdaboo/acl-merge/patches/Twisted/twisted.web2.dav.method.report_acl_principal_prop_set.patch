Index: twisted/web2/dav/method/report_acl_principal_prop_set.py
===================================================================
--- twisted/web2/dav/method/report_acl_principal_prop_set.py	(revision 17966)
+++ twisted/web2/dav/method/report_acl_principal_prop_set.py	(working copy)
@@ -53,9 +53,8 @@
     # Depth must be "0"
     depth = request.headers.getHeader("depth", "0")
     if depth != "0":
-        log.err("Non-zero depth is not allowed: %s" % (depth,))
-        yield StatusResponse(responsecode.BAD_REQUEST, "Depth %s not allowed" % (depth,))
-        return
+        log.err("Error in prinicpal-prop-set REPORT, Depth set to %s" % (depth,))
+        raise HTTPError(StatusResponse(responsecode.BAD_REQUEST, "Depth %s not allowed" % (depth,)))
     
     #
     # Check authentication and access controls
@@ -90,7 +89,9 @@
     acl = acl.getResult()
 
     for ace in acl.children:
-        resolved = self.resolvePrincipal(ace.principal.children[0], request)
+        resolved = waitForDeferred(self.resolvePrincipal(ace.principal.children[0], request))
+        yield resolved
+        resolved = resolved.getResult()
         if resolved is not None and resolved not in principals:
             principals.append(resolved)
 
@@ -122,7 +123,7 @@
                         davxml.Status.fromResponseCode(responsecode.FORBIDDEN)
                     ))
                 else:
-                    prop_common.responseForHref(
+                    d = waitForDeferred(prop_common.responseForHref(
                         request,
                         responses,
                         principal,
@@ -129,7 +130,9 @@
                         resource,
                         propertiesForResource,
                         propElement
-                    )
+                    ))
+                    yield d
+                    d.getResult()
             else:
                 log.err("Requested principal resource not found: %s" % (str(principal),))
                 responses.append(davxml.StatusResponse(
