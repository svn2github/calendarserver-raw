Index: twisted/web2/dav/static.py
===================================================================
--- twisted/web2/dav/static.py	(revision 18209)
+++ twisted/web2/dav/static.py	(working copy)
@@ -29,6 +29,7 @@
 __all__ = ["DAVFile"]
 
 import os
+import stat
 
 from twisted.python import log
 from twisted.internet.defer import succeed, deferredGenerator, waitForDeferred
@@ -98,6 +99,58 @@
         return succeed(davPrivilegeSet)
 
     ##
+    # Quota
+    ##
+
+    def quotaSize(self, request):
+        """
+        Get the size of this resource.
+        TODO: Take into account size of dead-properties. Does stat
+            include xattrs size?
+
+        @return: a C{int} containing the size of the resource.
+        """
+        if self.isCollection():
+            return self.collectionQuotaUse(request)
+        else:
+            result = os.stat(self.fp.path)
+            return result[stat.ST_SIZE]
+
+    def collectionQuotaUse(self, request):
+        """
+        Brute force determination of quota used by this collection.
+
+        @return: a C{int} containing the current used byte if this collection
+            is quota-controlled, or C{None} if not quota controlled.
+        """
+        assert self.isCollection(), "Only collections can have a quota root"
+
+        def walktree(top):
+            """
+            Recursively descend the directory tree rooted at top,
+            calling the callback function for each regular file
+            """
+        
+            total = 0
+            for f in os.listdir(top):
+                pathname = os.path.join(top, f)
+                result = os.stat(pathname)
+                mode = result[stat.ST_MODE]
+                if stat.S_ISDIR(mode):
+                    # It's a directory, recurse into it
+                    total += walktree(pathname)
+                elif stat.S_ISREG(mode):
+                    # It's a file, call the callback function
+                    total += result[stat.ST_SIZE]
+                else:
+                    # Unknown file type, print a message
+                    pass
+        
+            return total
+        
+        return walktree(self.fp.path)
+
+    ##
     # Workarounds for issues with File
     ##
 
