Index: twisted/web2/dav/method/report_principal_match.py
===================================================================
--- twisted/web2/dav/method/report_principal_match.py	(revision 18375)
+++ twisted/web2/dav/method/report_principal_match.py	(working copy)
@@ -89,13 +89,21 @@
         responses = []
         matchcount = 0
 
+        selfPrincipal = self.currentPrincipal(request).children[0]
+
+        # Do some optimisation of access control calculation by determining any inherited ACLs outside of
+        # the child resource loop and supply those to the checkPrivileges on each child.
+        filteredaces = waitForDeferred(self.inheritedACEsforChildren(request))
+        yield filteredaces
+        filteredaces = filteredaces.getResult()
+    
+        children = []
+        d = waitForDeferred(self.findChildren("infinity", request, lambda x, y: children.append((x,y)),
+                                              privileges=(davxml.Read(),), inherited_aces=filteredaces))
+        yield d
+        d.getResult()
+
         if lookForPrincipals:
-            selfPrincipal = self.currentPrincipal(request).children[0]
-
-            children = []
-            d = waitForDeferred(self.findChildren("infinity", request, lambda x, y: children.append((x,y)), privileges=(davxml.Read(),)))
-            yield d
-            d.getResult()
 
             for child, uri in children:
                 if isPrincipalResource(child) and child.principalMatch(selfPrincipal):
@@ -115,13 +123,6 @@
                     yield d
                     d.getResult()
         else:
-            selfPrincipal = self.currentPrincipal(request).children[0]
-
-            children = []
-            d = waitForDeferred(self.findChildren("infinity", request, lambda x, y: children.append((x,y)), privileges=(davxml.Read(),)))
-            yield d
-            d.getResult()
-
             for child, uri in children:
                 # Try to read the requested property from this resource
                 try:
