Index: twisted/web2/dav/method/report_principal_match.py
===================================================================
--- twisted/web2/dav/method/report_principal_match.py	(revision 26343)
+++ twisted/web2/dav/method/report_principal_match.py	(working copy)
@@ -102,7 +102,10 @@
             selfItems = [principal,]
             
             # Get group memberships for "self" and add each of those
-            selfItems.extend(principal.groupMemberships())
+            d = waitForDeferred(principal.groupMemberships())
+            yield d
+            memberships = d.getResult()
+            selfItems.extend(memberships)
             
             # Now add each principal found to the response provided the principal resource is a child of
             # the current resource.
@@ -118,7 +121,7 @@
                         # Check size of results is within limit
                         matchcount += 1
                         if matchcount > max_number_of_matches:
-                            raise NumberOfMatchesWithinLimits
+                            raise NumberOfMatchesWithinLimits(max_number_of_matches)
         
                         d = waitForDeferred(prop_common.responseForHref(
                             request,
@@ -158,22 +161,26 @@
                         yield principal
                         principal = principal.getResult()
 
-                        if principal and isPrincipalResource(principal) and principal.principalMatch(myPrincipalURL):
-                            # Check size of results is within limit
-                            matchcount += 1
-                            if matchcount > max_number_of_matches:
-                                raise NumberOfMatchesWithinLimits
+                        if principal and isPrincipalResource(principal):
+                            d = waitForDeferred(principal.principalMatch(myPrincipalURL))
+                            yield d
+                            matched = d.getResult()
+                            if matched:
+                                # Check size of results is within limit
+                                matchcount += 1
+                                if matchcount > max_number_of_matches:
+                                    raise NumberOfMatchesWithinLimits(max_number_of_matches)
 
-                            d = waitForDeferred(prop_common.responseForHref(
-                                request,
-                                responses,
-                                davxml.HRef.fromString(uri),
-                                child,
-                                propertiesForResource,
-                                propElement
-                            ))
-                            yield d
-                            d.getResult()
+                                d = waitForDeferred(prop_common.responseForHref(
+                                    request,
+                                    responses,
+                                    davxml.HRef.fromString(uri),
+                                    child,
+                                    propertiesForResource,
+                                    propElement
+                                ))
+                                yield d
+                                d.getResult()
                 except HTTPError:
                     # Just ignore a failure to access the property. We treat this like a property that does not exist
                     # or does not match the principal.
@@ -183,7 +190,7 @@
         log.err("Too many matching components in principal-match report")
         raise HTTPError(ErrorResponse(
             responsecode.FORBIDDEN,
-            (dav_namespace, "number-of-matches-within-limits")
+            davxml.NumberOfMatchesWithinLimits()
         ))
 
     yield MultiStatusResponse(responses)
