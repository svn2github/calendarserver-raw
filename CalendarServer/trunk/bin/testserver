#!/bin/sh
# -*- sh-basic-offset: 2 -*-

##
# Copyright (c) 2005-2014 Apple Inc. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
##

set -e;
set -u;

wd="$(cd "$(dirname "$0")/.." && pwd -L)";

. "${wd}/bin/_build.sh";

init_build > /dev/null;

cdt="${py_virtualenv}/src/caldavtester";

##
# Command line handling
##

   verbose="";
serverinfo="${cdt}/scripts/server/serverinfo.xml";
  printres="";
    subdir="";
    random="--random";
      seed="";
       ssl="";

usage ()
{
  program="$(basename "$0")";
  echo "Usage: ${program} [-v] [-s serverinfo]";
  echo "Options:";
  echo "        -d  Set the script subdirectory";
  echo "        -h  Print this help and exit";
  echo "        -o  Execute tests in order";
  echo "        -r  Print request and response";
  echo "        -s  Set the serverinfo.xml";
  echo "        -t  Set the CalDAVTester directory";
  echo "        -x  Random seed to use.";
  echo "        -v  Verbose.";
  echo "        -z  Use SSL.";

  if [ "${1-}" == "-" ]; then return 0; fi;
  exit 64;
}

while getopts 'hvrozt:s:d:x:' option; do
  case "$option" in
    '?') usage; ;;
    'h') usage -; exit 0; ;;
    't') cdt="${OPTARG}"; serverinfo="${OPTARG}/scripts/server/serverinfo.xml"; ;;
    'd') subdir="--subdir=${OPTARG}"; ;;
    's') serverinfo="${OPTARG}"; ;;
    'r') printres="--always-print-request --always-print-response"; ;;
    'v') verbose="v"; ;;
    'o') random=""; ;;
    'x') seed="--random-seed ${OPTARG}"; ;;
    'z') ssl="--ssl"; ;;
  esac;
done;

shift $((${OPTIND} - 1));

if [ $# == 0 ]; then
  set - "--all";
fi;

##
# Do The Right Thing
##

do_setup="false";
develop > /dev/null;

# Set up sandbox

sandboxdir="/tmp/cdt_server_sandbox"

if [ -d "${sandboxdir}" ]; then
  rm -rf "${sandboxdir}"
fi;

mkdir -p "${sandboxdir}/Config" "${sandboxdir}/Data" "${sandboxdir}/Logs" "${sandboxdir}/Run"

cp conf/caldavd-test.plist "${sandboxdir}/Config/caldavd-cdt.plist"
cp conf/auth/proxies-test.xml "${sandboxdir}/Data/proxies-cdt.xml"
cp conf/auth/resources-test.xml "${sandboxdir}/Data/resources-cdt.xml"
cp conf/auth/augments-test.xml "${sandboxdir}/Data/augments-cdt.xml"
cp conf/auth/accounts-test.xml "${sandboxdir}/Data/accounts-cdt.xml"

# Modify the plist

plutil -replace ServerRoot -string "${sandboxdir}" "${sandboxdir}/Config/caldavd-cdt.plist"
plutil -replace ConfigRoot -string "Config" "${sandboxdir}/Config/caldavd-cdt.plist"
plutil -replace ProxyLoadFromFile -string "${sandboxdir}/Data/proxies-cdt.xml" "${sandboxdir}/Config/caldavd-cdt.plist"
plutil -replace ResourceService.params.xmlFile -string "${sandboxdir}/Data/resources-cdt.xml" "${sandboxdir}/Config/caldavd-cdt.plist"
plutil -replace DirectoryService.params.xmlFile -string "${sandboxdir}/Data/accounts-cdt.xml" "${sandboxdir}/Config/caldavd-cdt.plist"
plutil -replace AugmentService.params.xmlFile -xml "<array><string>${sandboxdir}/Data/augments-cdt.xml</string></array>" "${sandboxdir}/Config/caldavd-cdt.plist"

# Start the server

"${wd}/bin/run" -nd -c /tmp/cdt_server_sandbox/Config/caldavd-cdt.plist

echo "Waiting 10 seconds for server to start up"
sleep 10

# Run CDT

echo "Starting CDT run"
cd "${cdt}" && "${python}" testcaldav.py ${random} ${seed} ${ssl} --print-details-onfail ${printres} -s "${serverinfo}" ${subdir} "$@";

# Stop the server  -- FIXME:  if the CDT test fails, for some reason the
# following lines don't execute...

echo "Stopping server"
"${wd}/bin/run" -nk -c /tmp/cdt_server_sandbox/Config/caldavd-cdt.plist
