<!DOCTYPE html>
<html
 xmlns:t="http://twistedmatrix.com/ns/twisted.web.template/0.1"
 t:render="main"
>

  <head>

    <title><t:slot name="title" /></title>
    <link t:render="stylesheet" />

    <style>

    #work_queues_chart rect {
      fill: steelblue;
    }

    #work_queues_chart text {
      fill: white;
      font: 10px sans-serif;
      text-anchor: end;
    }

    </style>

    <script src="http://d3js.org/d3.v3.min.js"></script>
    <script>

      var workTableDescriptions = {
        // Scheduling
        "SCHEDULE_ORGANIZER_WORK": "Schedule Organizer",
        "SCHEDULE_REPLY_WORK": "Schedule Reply",
        "SCHEDULE_REPLY_CANCEL_WORK": "Schedule Reply (Cancel)",
        "SCHEDULE_REFRESH_WORK": "Schedule Refresh",
        "SCHEDULE_AUTO_REPLY_WORK": "Schedule Auto-reply",

        // iMIP scheduling
        "IMIP_POLLING_WORK": "iMIP Poll",
        "IMIP_INVITATION_WORK": "iMIP Invitation",
        "IMIP_REPLY_WORK": "iMIP Reply",

        // Group cacher
        "GROUP_CACHER_POLLING_WORK": "Group Cache Poll",
        "GROUP_REFRESH_WORK": "Group Refresh",
        "GROUP_ATTENDEE_RECONCILIATION_WORK": "Group Attendee Reconciliation",

        // Push notifications
        "PUSH_NOTIFICATION_WORK": "Push Notification",

        // Event splitting
        "CALENDAR_OBJECT_SPLITTER_WORK": "Event Split",

        // Inbox cleanup
        "INBOX_CLEANUP_WORK": "Inbox Cleanup",
        "CLEANUP_ONE_INBOX_WORK": "Inbox Cleanup: One",

        // Revision cleanup
        "REVISION_CLEANUP_WORK": "Revision Cleanup",
        "FIND_MIN_VALID_REVISION_WORK": "Revision Cleanup: Find Minimum",
      };

      function drawChart(data) {
        items = [];

        // Add items in the order used by workTableDescriptions
        for (key in workTableDescriptions) {
          if (key in data) {
            items.push({
              name: key,
              count: data[key],
              description: workTableDescriptions[key],
            });
          }
        }

        for (key in data) {
          if (! key in workTableDescriptions) {
            items.push({
              name: key,
              count: data[key],
              description: key,
            });
          }
        }

        var width = 960;
        var height = 500;

        // var barHeight = 20;

        var xLocation =
          d3.scale.linear()
            .domain([0, d3.max(items, function(i) { return i.count; })])
            .range([0, width]);

        var yLocation =
          d3.scale.ordinal()
            .domain(items.map(function(i) { return i.name; }))
            .rangeRoundBands([0, height], 0.1);

        var chart =
          d3.select("#work_queues_chart")
            .attr("width", width)
            .attr("height", height);

        var bars =
          chart.selectAll("g")
            .data(items);

        // Enter selection
        bars.enter().append("g");

        // Update selection
        bars.attr(
          "transform",
          function(i) { return "translate(0," + yLocation(i.name) + ")"; }
        );

        bars.append("rect")
          .attr("width", function(i) { return xLocation(i.count); })
          .attr("height", yLocation.rangeBand());

        bars.append("text")
          .attr("x", function(i) { return xLocation(i.count) - 3; })
          .attr("y", yLocation.rangeBand() / 2)
          .attr("dy", "0.35em")
          .text(function(i) { return i.count; });

        // Exit selection
        bars.exit().remove();
      }

      function initChart() {
        data = {};

        for (key in workTableDescriptions) {
          data[key] = 0;
        }

        drawChart(data);
      }

      function registerForEvents() {
        var eventSource = new EventSource("./events");

        eventSource.addEventListener(
          "work-total",
          function(e) { drawChart(JSON.parse(e.data)); },
          false
        );

      }


      window.onload = function() {
        initChart();
        registerForEvents();
      };

    </script>

  </head>

  <body>

    <h1><t:slot name="title" /></h1>

    <svg id="work_queues_chart" />

  </body>

</html>
