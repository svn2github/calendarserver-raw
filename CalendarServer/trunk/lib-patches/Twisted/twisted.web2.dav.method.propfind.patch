Index: twisted/web2/dav/method/propfind.py
===================================================================
--- twisted/web2/dav/method/propfind.py	(revision 18375)
+++ twisted/web2/dav/method/propfind.py	(working copy)
@@ -102,11 +102,15 @@
 
     xml_responses = []
 
-    # FIXME: take advantage of the new generative properties of findChildren
+    # Do some optimisation of access control calculation by determining any inherited ACLs outside of
+    # the child resource loop and supply those to the checkPrivileges on each child.
+    filteredaces = waitForDeferred(self.inheritedACEsforChildren(request))
+    yield filteredaces
+    filteredaces = filteredaces.getResult()
 
     resources = [(self, None)]
 
-    d = self.findChildren(depth, request, lambda x, y: resources.append((x, y)), (davxml.Read(),))
+    d = self.findChildren(depth, request, lambda x, y: resources.append((x, y)), (davxml.Read(),), inherited_aces=filteredaces)
     x = waitForDeferred(d)
     yield x
     x.getResult()
@@ -116,11 +120,11 @@
             uri = normalizeURL(request_uri)
             if self.isCollection() and not uri.endswith("/"): uri += "/"
 
-        resource_properties = waitForDeferred(resource.listProperties(request))
-        yield resource_properties
-        resource_properties = resource_properties.getResult()
+        if search_properties is "names":
+            resource_properties = waitForDeferred(resource.listProperties(request))
+            yield resource_properties
+            resource_properties = resource_properties.getResult()
 
-        if search_properties is "names":
             properties_by_status = {
                 responsecode.OK: [propertyName(p) for p in resource_properties]
             }
@@ -138,7 +142,10 @@
                 properties_to_enumerate = search_properties
 
             for property in properties_to_enumerate:
-                if property in resource_properties:
+                has = waitForDeferred(resource.hasProperty(property, request))
+                yield has
+                has = has.getResult()
+                if has:
                     try:
                         resource_property = waitForDeferred(resource.readProperty(property, request))
                         yield resource_property
