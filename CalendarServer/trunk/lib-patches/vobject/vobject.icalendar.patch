Index: vobject/icalendar.py
===================================================================
--- vobject/icalendar.py	(revision 219)
+++ vobject/icalendar.py	(working copy)
@@ -1622,11 +1622,15 @@
 
 # DQUOTE included to work around iCal's penchant for backslash escaping it,
 # although it isn't actually supposed to be escaped according to rfc2445 TEXT
-escapableCharList = '\\;,Nn"'
 
-def stringToTextValues(s, listSeparator=',', charList=None, strict=False):
+# COLON included to work around Address Book's escaping it in vCard data,
+# despite the fact that it is similarly not supposed to be escaped.
+
+escapableCharList = '\\;:,Nn'
+
+def stringToTextValues(s, listSeparator=',', charList=None, strict=False, leaveEscapes=False):
     """Returns list of strings."""
-    
+
     if charList is None:
         charList = escapableCharList
 
@@ -1655,7 +1659,10 @@
 
         if state == "read normal":
             if char == '\\':
-                state = "read escaped char"
+                if leaveEscapes:
+                    current.append(char)
+                else:
+                    state = "read escaped char"
             elif char == listSeparator:
                 state = "read normal"
                 current = "".join(current)
@@ -1675,9 +1682,10 @@
                 else:
                     current.append(char)
             else:
-                state = "read normal"
+                #state = "read normal"
                 # leave unrecognized escaped characters for later passes
-                current.append('\\' + char)
+                #current.append('\\' + char)
+                raise ParseError("error: illegal escape sequence: '\\%s'" % (char,))
 
         elif state == "end":    #an end state
             if len(current) or len(results) == 0:
